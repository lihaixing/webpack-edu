!function(m){function n(o){if(r[o])return r[o].exports;var t=r[o]={i:o,l:!1,exports:{}};return m[o].call(t.exports,t,t.exports,n),t.l=!0,t.exports}var r={};n.m=m,n.c=r,n.d=function(m,r,o){n.o(m,r)||Object.defineProperty(m,r,{configurable:!1,enumerable:!0,get:o})},n.n=function(m){var r=m&&m.__esModule?function(){return m.default}:function(){return m};return n.d(r,"a",r),r},n.o=function(m,n){return Object.prototype.hasOwnProperty.call(m,n)},n.p="./dist/",n(n.s=0)}([function(m,n){throw new Error("Module build failed: Syntax Error \n\n(4:10) Unknown word\n\n [90m 2 | [39mimport common from [32m'./css/common.css'[39m\n [90m 3 | [39mimport main from [32m'./less/main.less'[39m\n[31m[1m>[22m[39m[90m 4 | [39mimport [33m{[39m apple [33m}[39m from [32m'./js/util'[39m\n [90m   | [39m         [31m[1m^[22m[39m\n [90m 5 | [39m// lodash写的方法是一个整体函数，不是通过import方法写的，treeShaking没起作用\n [90m 6 | [39mimport [33m{[39m chunk [33m}[39m from [32m'babel-plugin-lodash'[39m\n")}]);